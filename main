#include<stdio.h>
#include<stdlib.h>
#include<time.h>

int i, j, k, m, tmp;

void pspace(int n);
void ptable(int coord[8][8]);
int testo(int coord[8][8], int x, int y);

void comp(int coord[8][8]);
int testcom(int coord[8][8], int x, int y);
int testx(int coord[8][8], int x, int y);

int main(void)
{
	tmp = 1;

	char movei;
	int coord[8][8] = { 0 }, c, movej, flag = 0;

	coord[3][3] = coord[4][4] = 1;
	coord[4][3] = coord[3][4] = 2;
	ptable(coord);

	while (1)
	{
		printf("you are O.\n");
		do {
			if (tmp == 0)
			{
				printf("fk rule!\n");
				while (1)
				{
					c = getchar();
					if (c == ' ' || c == '\n' || c == EOF) break;
				}
			}

			while (flag == 0 || tmp == 0)
			{
				printf("enter your move:");
				if (scanf(" %c%d", &movei, &movej) == 2)
					if (movei >= 'a' && movei <= 'h')
						if (movej >= 1 && movej <= 8)
							flag = 1;
				if (flag == 0)
				{
					printf("wrong input!\n");
					movei = movej = 0;
					while (1)
					{
						c = getchar();
						if (c == ' ' || c == '\n' || c == EOF) break;
					}
				}

				tmp = 1;
			}

		} while (testo(coord, movei - 97, movej - 1) == 0);

		coord[movei - 97][movej - 1] = 2;

		ptable(coord);
		flag = 0;


		comp(coord);
		ptable(coord);
	}

}


void pspace(int n)
{
	for (i = 0; i < n; i++)
		printf(" ");
}

void ptable(int coord[8][8])
{
	pspace(49); printf("|a|b|c|d|e|f|g|h|\n");
	pspace(49); printf("+-+-+-+-+-+-+-+-+\n");

	for (j = 0; j < 8; j++)
	{
		pspace(48);
		printf("%d", j + 1);
		for (i = 0; i < 8; i++)
			if (coord[i][j] == 1)
				printf("|X");
			else if (coord[i][j] == 2)
				printf("|O");
			else
				printf("| ");
		printf("|\n");
	}
	pspace(49); printf("+---------------+\n");
}



int testo(int coord[8][8], int x, int y)
{
	int Ocount = 0, Xcount = 0, i = 1;


	tmp = 0;

	if (coord[x][y] != 1 && coord[x][y] != 2)
	{
		for (k = -1; k <= 1; k++)
			for (m = -1; m <= 1; m++)
			{
				while (1)
				{
					if (coord[x + i*k][y + i*m] == 1)
						Xcount++;
					else if (coord[x + i*k][y + i*m] == 2)
					{
						Ocount++;
						break;
					}
					else
						break;
					i++;
				}
				if (Ocount == 1)
					for (i = 1; i <= Xcount; i++)
					{
						coord[x + i*k][y + i*m] = 2;
						tmp++;
					}
				Ocount = Xcount = 0;
				i = 1;
			}
		return tmp;
	}
	else
		return 0;
	
}


void comp(int coord[8][8])
{

	int a[128] = { 0 }, n = 0, x,q;

	srand(time(0));

	for(i=0;i<8;i++)
		for(j=0;j<8;j++)
			if (testcom(coord, i, j) == 1)
			{
				a[n] = i;
				a[n + 64] = j;
				n++;
			}

	if (n != 0)
	{
		x = rand() % (n);
		testx(coord, a[x], a[x + 64]);
		coord[a[x]][a[x + 64]] = 1;
	}  	
	printf("your opponent enter %c%d\n",a[x]+97,a[x+64]+1);
}

int testcom(int coord[8][8], int x, int y)
{
	int Ocount = 0, Xcount = 0, i = 1, comflag = 0;


	tmp = 0;

	if (coord[x][y] != 1 && coord[x][y] != 2)
	{
		for (k = -1; k <= 1; k++)
			for (m = -1; m <= 1; m++)
			{
				while (1)
				{
					if (coord[x + i*k][y + i*m] == 2)
						Ocount++;
					else if (coord[x + i*k][y + i*m] == 1)
					{
						Xcount++;
						break;
					}
					else
						break;
					i++;
				}
				if (Xcount == 1)
					if (Ocount > 0)
						comflag = 1;

				Ocount = Xcount = 0;
				i = 1;
			}
		return comflag;
	}
	else
		return 0;
}

int testx(int coord[8][8], int x, int y)
{
	int Ocount = 0, Xcount = 0, i = 1;


	tmp = 0;

	for (k = -1; k <= 1; k++)
		for (m = -1; m <= 1; m++)
		{
			while (1)
			{
				if (coord[x + i*k][y + i*m] == 2)
					Ocount++;
				else if (coord[x + i*k][y + i*m] == 1)
				{
					Xcount++;
					break;
				}
				else
					break;
				i++;
			}
			if (Xcount == 1)
				for (i = 1; i <= Ocount;i++)
				{		
					coord[x + i*k][y + i*m] = 1;
				    tmp++;
				}
			Ocount = Xcount = 0;
			i = 1;
		}
	return tmp;
}
